var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Map/index.tsx
var Map_exports = {};
__export(Map_exports, {
  default: () => Map_default
});
module.exports = __toCommonJS(Map_exports);
var import_larkmap = require("@antv/larkmap");
var import_react = __toESM(require("react"));
var import_map = require("../utils/map");
var import_Component = require("./Component");
var Map = (props) => {
  const { className, containerStyle, style, children } = props;
  const mapConfig = (0, import_react.useMemo)(() => (0, import_map.formatMapStyle)(props), [props]);
  const onSceneLoaded = async () => {
    if (props.onInitComplete) {
      props.onInitComplete();
    }
  };
  return /* @__PURE__ */ import_react.default.createElement(
    import_larkmap.LarkMap,
    {
      className,
      style: { height: 300, ...containerStyle, ...style },
      ...mapConfig,
      onSceneLoaded
    },
    /* @__PURE__ */ import_react.default.createElement(import_Component.MapView, { ...props }),
    /* @__PURE__ */ import_react.default.createElement(import_Component.Marker, { ...props }),
    /* @__PURE__ */ import_react.default.createElement(import_Component.Polyline, { ...props }),
    children
  );
};
var Map_default = Map;
