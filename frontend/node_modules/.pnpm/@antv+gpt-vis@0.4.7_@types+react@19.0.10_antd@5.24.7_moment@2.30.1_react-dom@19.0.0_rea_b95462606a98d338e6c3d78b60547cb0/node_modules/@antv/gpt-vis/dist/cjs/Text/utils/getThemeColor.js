var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Text/utils/getThemeColor.ts
var getThemeColor_exports = {};
__export(getThemeColor_exports, {
  getThemeColor: () => getThemeColor
});
module.exports = __toCommonJS(getThemeColor_exports);
var import_lodash = require("lodash");
var import_config = require("../config");
var import_theme = require("../theme");
var getThemeColor = ({
  type,
  color,
  theme
}) => {
  if (type && color && theme === "dark") {
    const defaultLightColor = (0, import_lodash.get)(import_config.DEFAULT_VIS_TEXT_CONFIG, [type, "color"]);
    if (color === defaultLightColor) {
      const token = (0, import_lodash.findKey)(import_theme.TEXT_THEME.light, (i) => i === color);
      if (token)
        return import_theme.TEXT_THEME.dark[token];
    }
  }
  return color;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getThemeColor
});
