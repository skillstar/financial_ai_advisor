import { LineLayer } from '../../core-layers/line-layer';
import { PolygonLayer } from '../../core-layers/polygon-layer';
import { TextLayer } from '../../core-layers/text-layer';
import { CompositeLayer } from '../../core/composite-layer';
import { ICoreLayer, ISource } from '../../types';
import { ChoroplethLayerOptions, ChoroplethLayerSourceOptions } from './types';
export declare class ChoroplethLayer extends CompositeLayer<ChoroplethLayerOptions> {
    /**
     * 默认配置项
     */
    static DefaultOptions: Partial<ChoroplethLayerOptions>;
    /**
     * 复合图层类型
     */
    type: import("../../types").CompositeLayerType;
    /**
     * 主图层
     */
    protected get layer(): ICoreLayer;
    /**
     * 填充面图层
     */
    get fillLayer(): ICoreLayer;
    /**
     * 描边图层
     */
    get strokeLayer(): ICoreLayer;
    /**
     * 高亮描边图层
     */
    get highlightStrokeLayer(): ICoreLayer;
    /**
     * 高亮数据
     */
    private highlightData;
    /**
     * 选中填充面图层
     */
    get selectFillLayer(): ICoreLayer;
    /**
     * 选中描边图层
     */
    get selectStrokeLayer(): ICoreLayer;
    /**
     * 选中数据
     */
    private selectData;
    /**
     * 标注文本图层
     */
    get labelLayer(): TextLayer;
    /**
     * 图层交互状态配置
     */
    private layerState;
    constructor(options: ChoroplethLayerOptions);
    /**
     * 获取默认配置
     */
    getDefaultOptions(): Partial<ChoroplethLayerOptions>;
    /**
     * 创建子图层
     */
    protected createSubLayers(): (TextLayer | LineLayer | PolygonLayer)[];
    /**
     * 获取填充图层配置项
     */
    private getFillLayerOptions;
    private getStrokeLayerOptions;
    private getHighlightStrokeLayerOptions;
    private getSelectFillLayerOptions;
    private getSelectStrokeLayerOptions;
    /**
     * 设置子图层数据
     */
    protected setSubLayersSource(source: ChoroplethLayerSourceOptions | ISource): void;
    /**
     * 设置高亮描边子图层数据
     */
    protected setHighlightLayerSource(feature?: any, featureId?: number): void;
    /**
     * 设置选中描边与填充子图层数据
     */
    protected setSelectLayerSource(selectData?: any[]): void;
    /**
     * 初始化子图层事件
     */
    protected initSubLayersEvent(): void;
    /**
     * 图层高亮回调
     */
    private onHighlighHandle;
    /**
     * 图层取消高亮回调
     */
    private onUnhighlighHandle;
    /**
     * 图层选中回调
     */
    private onSelectHandle;
    /**
     * 处理选择数据私有方法
     */
    private handleSelectData;
    /**
     * 更新
     */
    update(options: Partial<ChoroplethLayerOptions>): void;
    /**
     * 更新: 更新配置
     */
    updateOption(options: Partial<ChoroplethLayerOptions>): void;
    /**
     * 更新子图层
     */
    protected updateSubLayers(options: Partial<ChoroplethLayerOptions>): void;
    /**
     * 更新高亮及选中子图层
     */
    private updateHighlightSubLayers;
    /**
     * 设置图层 zIndex
     */
    setIndex(zIndex: number): void;
    /**
     * 设置图层高亮状态
     */
    setActive(field: string, value: number | string): void;
    /**
     * 设置图层选中状态
     */
    setSelect(field: string, value: number | string): void;
    /**
     * 图层框选数据
     */
    boxSelect(bounds: [number, number, number, number], callback: (...args: any[]) => void): void;
}
