var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Text/mini-charts/line/SingleLineChart.tsx
var SingleLineChart_exports = {};
__export(SingleLineChart_exports, {
  SingleLineChart: () => SingleLineChart
});
module.exports = __toCommonJS(SingleLineChart_exports);
var import_lodash = require("lodash");
var import_react = __toESM(require("react"));
var import_theme = require("../../theme");
var import_hooks = require("../hooks");
var import_useLineCompute = require("./useLineCompute");
var LINEAR_FILL_COLOR_ID = "wsc-line-fill";
function getLineChartData(origin) {
  if ((0, import_lodash.isArray)(origin))
    return origin;
  if ((0, import_lodash.isString)(origin)) {
    try {
      const data = JSON.parse(origin);
      if ((0, import_lodash.isArray)(data))
        return data;
    } catch (e) {
      console.warn(e, `${origin} is not a valid json string`);
    }
  }
}
var SingleLineChart = ({ origin }) => {
  const [Svg, fontSize] = (0, import_hooks.useSvgWrapper)();
  const data = (0, import_react.useMemo)(() => getLineChartData(origin), [origin]);
  const { width, height, linePath, polygonPath } = (0, import_useLineCompute.useLineCompute)(fontSize, data);
  return (0, import_lodash.size)(data) > 0 && /* @__PURE__ */ import_react.default.createElement(Svg, { width, height }, /* @__PURE__ */ import_react.default.createElement("defs", null, /* @__PURE__ */ import_react.default.createElement("linearGradient", { x1: "50%", y1: "0%", x2: "50%", y2: "122.389541%", id: LINEAR_FILL_COLOR_ID }, /* @__PURE__ */ import_react.default.createElement("stop", { stopColor: import_theme.TEXT_THEME.chart.lineStrokeColor, offset: "0%" }), /* @__PURE__ */ import_react.default.createElement("stop", { stopColor: "#FFFFFF", stopOpacity: "0", offset: "100%" }))), linePath && /* @__PURE__ */ import_react.default.createElement("path", { d: linePath, stroke: import_theme.TEXT_THEME.chart.lineStrokeColor, fill: "transparent" }), polygonPath && /* @__PURE__ */ import_react.default.createElement("polygon", { points: polygonPath, fill: `url(#${LINEAR_FILL_COLOR_ID})` }));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SingleLineChart
});
