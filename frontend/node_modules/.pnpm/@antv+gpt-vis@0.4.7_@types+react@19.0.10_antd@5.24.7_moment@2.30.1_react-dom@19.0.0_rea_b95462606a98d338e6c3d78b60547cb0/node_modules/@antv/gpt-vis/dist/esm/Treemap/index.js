import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["data"];
import { Treemap as ADCTreemap } from '@ant-design/plots';
import React, { useMemo } from 'react';
import { usePlotConfig } from "../ConfigProvider/hooks";

// binNumber和binWidth为互斥属性，选其一即可

var defaultConfig = function defaultConfig(props) {
  var _props$valueField = props.valueField,
    valueField = _props$valueField === void 0 ? 'value' : _props$valueField;
  return {
    legend: false,
    layout: {
      tile: 'treemapBinary',
      paddingInner: 3
    },
    valueField: valueField,
    tooltip: {
      items: [function (d) {
        var _d$data;
        return {
          name: (_d$data = d.data) === null || _d$data === void 0 ? void 0 : _d$data.name,
          value: d[valueField]
        };
      }]
    },
    style: {
      fillOpacity: 0.8,
      labelFontSize: 12
    }
  };
};
var transform = function transform(data) {
  return {
    name: 'root',
    children: data
  };
};
var Treemap = function Treemap(props) {
  var config = usePlotConfig('Treemap', defaultConfig, props);
  var data = config.data,
    others = _objectWithoutProperties(config, _excluded);
  var transformData = useMemo(function () {
    return transform(data);
  }, [data]);
  return /*#__PURE__*/React.createElement(ADCTreemap, _extends({}, others, {
    data: transformData
  }));
};
export default Treemap;