function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["prefixCls", "bordered", "className", "getPopupContainer", "dropdownClassName", "popupClassName", "listHeight", "placement", "listItemHeight", "disabled", "notFoundContent"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import classNames from 'classnames';
import { omit } from 'lodash-es';
import RcSelect, { OptGroup, Option } from 'rc-select';
import * as React from 'react';
import "./index.css";
var SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';
var PREFIX_CLS = 'larkmap-select';
var InternalSelect = function InternalSelect(_ref, ref) {
  var customizePrefixCls = _ref.prefixCls,
    _ref$bordered = _ref.bordered,
    bordered = _ref$bordered === void 0 ? true : _ref$bordered,
    className = _ref.className,
    getPopupContainer = _ref.getPopupContainer,
    dropdownClassName = _ref.dropdownClassName,
    popupClassName = _ref.popupClassName,
    _ref$listHeight = _ref.listHeight,
    listHeight = _ref$listHeight === void 0 ? 256 : _ref$listHeight,
    placement = _ref.placement,
    _ref$listItemHeight = _ref.listItemHeight,
    listItemHeight = _ref$listItemHeight === void 0 ? 24 : _ref$listItemHeight,
    disabled = _ref.disabled,
    notFoundContent = _ref.notFoundContent,
    props = _objectWithoutProperties(_ref, _excluded);
  var mode = React.useMemo(function () {
    var _ref2 = props,
      m = _ref2.mode;
    if (m === 'combobox') {
      return undefined;
    }
    if (m === SECRET_COMBOBOX_MODE_DO_NOT_USE) {
      return 'combobox';
    }
    return m;
  }, [props]);
  var selectProps = omit(props, 'suffixIcon', 'itemIcon');
  var mergedClassName = classNames(_defineProperty({}, "".concat(PREFIX_CLS, "-borderless"), !bordered), className);
  return /*#__PURE__*/React.createElement(RcSelect, _extends({
    ref: ref
  }, selectProps, {
    listHeight: listHeight,
    listItemHeight: listItemHeight,
    mode: mode,
    prefixCls: PREFIX_CLS,
    placement: placement,
    notFoundContent: notFoundContent !== null && notFoundContent !== void 0 ? notFoundContent : '当前无数据',
    className: mergedClassName,
    getPopupContainer: getPopupContainer,
    dropdownClassName: popupClassName,
    disabled: disabled
  }));
};
var Select = /*#__PURE__*/React.forwardRef(InternalSelect);
Select.SECRET_COMBOBOX_MODE_DO_NOT_USE = SECRET_COMBOBOX_MODE_DO_NOT_USE;
Select.Option = Option;
Select.OptGroup = OptGroup;
export default Select;