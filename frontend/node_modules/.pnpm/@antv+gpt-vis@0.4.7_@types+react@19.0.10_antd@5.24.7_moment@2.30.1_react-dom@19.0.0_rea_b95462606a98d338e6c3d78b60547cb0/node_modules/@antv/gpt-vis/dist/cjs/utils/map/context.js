var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/map/context.ts
var context_exports = {};
__export(context_exports, {
  setMapContext: () => setMapContext
});
module.exports = __toCommonJS(context_exports);
var import_util = require("./util");
function setMapContext(props, scene) {
  if (props.markers) {
    const icons = new Set(
      props.markers.filter((item) => item.iconPath !== void 0).map((item) => item.iconPath)
    );
    return Promise.all(
      Array.from(icons.values()).map(async (url) => {
        const id = (0, import_util.urlToMarkerId)(url);
        if (scene.hasImage(id)) {
          return;
        }
        return await scene.addImage(id, url);
      })
    );
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setMapContext
});
