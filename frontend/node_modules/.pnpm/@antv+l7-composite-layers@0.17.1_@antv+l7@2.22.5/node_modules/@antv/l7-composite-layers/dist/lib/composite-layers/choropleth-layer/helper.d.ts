import { IParserCfg } from '@antv/l7';
import { ChoroplethLayerOptions, LabelPosition } from './types';
import { SourceOptions } from '../../types/attr';
import { ISource } from '../../types/common';
/**
 * 是否开启自定义标注图层坐标字段
 */
export declare const isLabelPosition: (position?: LabelPosition) => position is Pick<IParserCfg, "x" | "y" | "coordinates" | "geometry">;
/**
 * 开启自定义标注图层坐标字段，解析标注图层 source
 */
export declare const parserLabeSourceData: (source: ISource, labelOptions: ChoroplethLayerOptions["label"]) => ISource | SourceOptions;
/**
 * 获取标注图层配置项
 */
export declare const getLabelLayerOptions: (options: ChoroplethLayerOptions, source: ISource) => {
    source: SourceOptions | ISource;
    visible: boolean | undefined;
    mask?: boolean | undefined;
    maskInside?: boolean | undefined;
    maskfence?: any;
    maskColor?: string | undefined;
    maskOpacity?: number | undefined;
    maskLayers?: import("@antv/l7").ILayer[] | undefined;
    maskOperation?: import("@antv/l7").MaskOperationType;
    sourceLayer?: string | undefined;
    scales?: {
        [key: string]: import("@antv/l7").IScale;
    } | undefined;
    minZoom: number | undefined;
    maxZoom: number | undefined;
    zIndex: number;
    pickingBuffer?: number | undefined;
    enablePropagation?: boolean | undefined;
    autoFit?: boolean | undefined;
    fitBoundsOptions?: unknown;
    name?: string | undefined;
    blend?: "normal" | "additive" | "subtractive" | "min" | "max" | "none" | undefined;
    depth?: boolean | undefined;
    pickedFeatureID?: number | undefined;
    enableMultiPassRenderer?: boolean | undefined;
    passes?: (string | [string, {
        [key: string]: unknown;
    }])[] | undefined;
    layerType?: string | undefined;
    cursorEnabled?: boolean;
    cursor?: string;
    forward?: boolean | undefined;
    enableMask?: boolean | undefined;
    enablePicking?: boolean | undefined;
    enableHighlight?: boolean | undefined;
    enableSelect?: boolean | undefined;
    highlightColor?: string | number[] | undefined;
    selectColor?: string | number[] | undefined;
    active?: boolean | undefined;
    activeColor?: string | number[] | undefined;
    activeMix?: number;
    selectMix?: number;
    enableLighting?: boolean | undefined;
    animateOption?: Partial<import("@antv/l7").IAnimateOption> | undefined;
    globalOptions?: any;
    iconfont?: boolean | undefined;
    workerEnabled?: boolean;
    field?: string;
    filter: import("../../types/attr").FilterAttr;
    scale?: import("../../types/attr").ScaleAttr;
    id?: string;
    texture?: import("../../types/attr").TextureAttr;
    style?: import("../..").TextLayerStyleOptions;
    state?: import("../../types/attr").StateAttribute;
    interaction?: boolean;
};
