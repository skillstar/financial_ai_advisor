import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
var _excluded = ["data"];
import { OrganizationChart as ADCOrganizationChart, RCNode } from '@ant-design/graphs';
import React, { useMemo } from 'react';
import { useGraphConfig } from "../ConfigProvider/hooks";
import { visTreeData2GraphData } from "../utils/graph";
var OrganizationChartNode = RCNode.OrganizationChartNode;
var defaultConfig = {
  padding: [40, 0, 0, 120],
  autoFit: 'view',
  autoResize: true,
  node: {
    style: {
      component: function component(d) {
        var _d$states;
        var isActive = (_d$states = d.states) === null || _d$states === void 0 ? void 0 : _d$states.includes('active');
        return /*#__PURE__*/React.createElement(OrganizationChartNode, {
          name: d.name,
          position: d.description,
          status: 'online',
          isActive: isActive
        });
      },
      size: [280, 80]
    }
  },
  edge: {
    state: {
      active: {
        stroke: '#1890ff',
        halo: false
      }
    }
  },
  behaviors: function behaviors(prev) {
    return [].concat(_toConsumableArray(prev), ['hover-activate-neighbors']);
  },
  transforms: function transforms(prev) {
    return [].concat(_toConsumableArray(prev.filter(function (t) {
      return t.type !== 'collapse-expand-react-node';
    })), [_objectSpread(_objectSpread({}, prev.find(function (t) {
      return t.type === 'collapse-expand-react-node';
    })), {}, {
      enable: true,
      iconOffsetY: 24
    })]);
  },
  animation: false
};
var OrganizationChart = function OrganizationChart(props) {
  var propsData = props.data,
    restProps = _objectWithoutProperties(props, _excluded);
  var data = useMemo(function () {
    return visTreeData2GraphData(propsData);
  }, [propsData]);
  var config = useGraphConfig('OrganizationChart', defaultConfig, restProps);
  return /*#__PURE__*/React.createElement(ADCOrganizationChart, _extends({
    data: data
  }, config));
};
export default OrganizationChart;