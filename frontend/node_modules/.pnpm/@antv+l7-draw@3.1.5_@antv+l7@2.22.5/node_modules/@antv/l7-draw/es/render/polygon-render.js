function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
import { PolygonLayer } from '@antv/l7';
import { featureCollection } from '@turf/turf';
import { debounce } from 'lodash';
import { LayerEvent, RenderEvent, SceneEvent } from '../constant';
import { LayerRender } from './layer-render';
export var PolygonRender = /*#__PURE__*/function (_LayerRender) {
  function PolygonRender() {
    var _this;
    _classCallCheck(this, PolygonRender);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, PolygonRender, [].concat(args));
    _this.onMouseMove = function (e) {
      _this.emit(RenderEvent.Mousemove, e);
    };
    _this.onMouseOut = function (e) {
      _this.emit(RenderEvent.Mouseout, e);
    };
    _this.onMouseDown = function (e) {
      _this.emit(RenderEvent.Dragstart, e);
    };
    _this.onDragging = function (e) {
      _this.emit(RenderEvent.Dragging, e);
    };
    _this.onDragEnd = debounce(function (e) {
      _this.emit(RenderEvent.Dragend, e);
    }, 0);
    _this.onUnClick = function (e) {
      _this.emit(RenderEvent.UnClick, e);
    };
    _this.enableHover = function () {
      var _this$layers$, _this$layers$2;
      _this.disableHover();
      (_this$layers$ = _this.layers[0]) === null || _this$layers$ === void 0 ? void 0 : _this$layers$.on(LayerEvent.Mousemove, _this.onMouseMove);
      (_this$layers$2 = _this.layers[0]) === null || _this$layers$2 === void 0 ? void 0 : _this$layers$2.on(LayerEvent.Mouseout, _this.onMouseOut);
    };
    _this.disableHover = function () {
      var _this$layers$3, _this$layers$4;
      (_this$layers$3 = _this.layers[0]) === null || _this$layers$3 === void 0 ? void 0 : _this$layers$3.off(LayerEvent.Mousemove, _this.onMouseMove);
      (_this$layers$4 = _this.layers[0]) === null || _this$layers$4 === void 0 ? void 0 : _this$layers$4.off(LayerEvent.Mouseout, _this.onMouseOut);
    };
    return _this;
  }
  _inherits(PolygonRender, _LayerRender);
  return _createClass(PolygonRender, [{
    key: "initLayers",
    value: function initLayers() {
      var _this$style = this.style,
        normal = _this$style.normal,
        hover = _this$style.hover,
        active = _this$style.active,
        style = _this$style.style,
        options = _this$style.options;
      var polygonLayer = new PolygonLayer(options !== null && options !== void 0 ? options : {});
      polygonLayer.source(featureCollection([])).color('isHover*isActive', function (isHover, isActive) {
        return isActive ? active.color : isHover ? hover.color : normal.color;
      }).style(style);
      return [polygonLayer];
    }
  }, {
    key: "enableDrag",
    value: function enableDrag() {
      this.disableDrag();
      this.layers[0].on(LayerEvent.Mousedown, this.onMouseDown);
      this.scene.on(SceneEvent.Dragging, this.onDragging);
      this.scene.on(SceneEvent.Mouseup, this.onDragEnd);
      this.scene.on(SceneEvent.Dragend, this.onDragEnd);
    }
  }, {
    key: "disableDrag",
    value: function disableDrag() {
      this.layers[0].off(LayerEvent.Mousedown, this.onMouseDown);
      this.scene.off(SceneEvent.Dragging, this.onDragging);
      this.scene.off(SceneEvent.Mouseup, this.onDragEnd);
      this.scene.off(SceneEvent.Dragend, this.onDragEnd);
    }
  }, {
    key: "enableUnClick",
    value: function enableUnClick() {
      this.disableUnClick();
      this.layers[0].on(LayerEvent.UnClick, this.onUnClick);
    }
  }, {
    key: "disableUnClick",
    value: function disableUnClick() {
      this.layers[0].off(LayerEvent.UnClick, this.onUnClick);
    }
  }]);
}(LayerRender);