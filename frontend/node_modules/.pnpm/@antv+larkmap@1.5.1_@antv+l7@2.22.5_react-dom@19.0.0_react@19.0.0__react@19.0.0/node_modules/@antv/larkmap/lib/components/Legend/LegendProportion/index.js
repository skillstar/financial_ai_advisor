"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LegendProportion = exports.CLS_PREFIX = void 0;
var _classnames = _interopRequireDefault(require("classnames"));
var _lodash = require("lodash");
var _react = _interopRequireDefault(require("react"));
require("./index.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const CLS_PREFIX = exports.CLS_PREFIX = 'larkmap-legend-proportion';
const LegendProportion = props => {
  const {
    labels,
    fillColor = '#f9f9f9',
    className: cls,
    style
  } = props;
  const [min, max] = labels;
  const circleSizes = [86, 62, 38, 24];
  /**
   * 计算跨度
   * @param min 最小值
   * @param max 最大值
   * @returns
   */
  function calculateSteps(newMin, newMax) {
    const gap = (newMax - newMin) / 4;
    const step1 = Math.floor(newMin + gap);
    const step2 = Math.floor(newMax - gap);
    return [step1, step2];
  }

  /**
   * 生成label范围
   * @returns
   */
  function generateRange() {
    let newMin = min,
      newMax = max;
    if (!(0, _lodash.isNumber)(newMin) || !(0, _lodash.isNumber)(newMin)) {
      newMin = newMax = 0;
    }
    if ((0, _lodash.isNaN)(newMin)) {
      newMin = 0;
    }
    if ((0, _lodash.isNaN)(newMax)) {
      newMax = 0;
    }
    const steps = calculateSteps(newMin, newMax);
    const range = [{
      prefix: 'MIN:',
      val: newMin
    }, ...steps, {
      prefix: 'MAX:',
      val: newMax
    }];
    return range;
  }
  function CircleBox() {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: `${CLS_PREFIX}__circlebox`,
      style: {
        width: circleSizes[0]
      }
    }, circleSizes.map(item => /*#__PURE__*/_react.default.createElement("div", {
      key: item,
      style: {
        width: item,
        height: item,
        background: fillColor
      },
      className: `${CLS_PREFIX}__circlebox__item`
    })));
  }
  function LabelBox() {
    return /*#__PURE__*/_react.default.createElement("div", {
      style: {
        height: circleSizes[0]
      }
    }, generateRange().reverse().map(item => /*#__PURE__*/_react.default.createElement("div", {
      key: (0, _lodash.uniqueId)(),
      className: `${CLS_PREFIX}__labelitem`
    }, item?.prefix, typeof item === 'number' ? item : item.val)));
  }
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(`${CLS_PREFIX}`, cls),
    style: style
  }, /*#__PURE__*/_react.default.createElement(CircleBox, null), /*#__PURE__*/_react.default.createElement(LabelBox, null));
};
exports.LegendProportion = LegendProportion;