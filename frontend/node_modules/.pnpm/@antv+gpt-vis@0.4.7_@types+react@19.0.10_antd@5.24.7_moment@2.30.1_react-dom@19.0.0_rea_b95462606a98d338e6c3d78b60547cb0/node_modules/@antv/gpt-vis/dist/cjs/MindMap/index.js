var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/MindMap/index.tsx
var MindMap_exports = {};
__export(MindMap_exports, {
  default: () => MindMap_default
});
module.exports = __toCommonJS(MindMap_exports);
var import_graphs = require("@ant-design/graphs");
var import_react = __toESM(require("react"));
var import_hooks = require("../ConfigProvider/hooks");
var import_graph = require("../utils/graph");
var defaultConfig = {
  type: "boxed",
  autoFit: "view",
  autoResize: true,
  padding: 2,
  node: { animation: { translate: false, update: false } },
  edge: { animation: { translate: false, update: false } },
  transforms: (prev) => [
    ...prev.filter(
      (transform) => transform.type !== "collapse-expand-react-node"
    ),
    {
      ...prev.find(
        (transform) => transform.type === "collapse-expand-react-node"
      ),
      enable: true
    }
  ]
};
var MindMap = (props) => {
  const { data: propsData, ...restProps } = props;
  const data = (0, import_react.useMemo)(() => (0, import_graph.visTreeData2GraphData)(propsData), [propsData]);
  const config = (0, import_hooks.useGraphConfig)("MindMap", defaultConfig, restProps);
  return /* @__PURE__ */ import_react.default.createElement(import_graphs.MindMap, { data, ...config });
};
var MindMap_default = MindMap;
