/// <reference types="lodash" />
import type { BaseMode } from '@antv/l7-draw';
import type { DrawType } from '../types';
import type { CommonDrawOptions, DrawGroupData, UseDrawGroupConfig } from './types';
export declare const useDrawGroup: ({ point: pointConfig, line: lineConfig, polygon: polygonConfig, rect: rectConfig, circle: circleConfig, }: UseDrawGroupConfig, commonOptions?: CommonDrawOptions) => {
    drawMap: import("lodash").Dictionary<BaseMode<import("@antv/l7-draw").IBaseModeOptions<import("@turf/helpers").Feature<import("@turf/helpers").Geometry | import("@turf/helpers").GeometryCollection, {
        [name: string]: any;
    }>>>>;
    drawGroupData: DrawGroupData;
    setDrawGroupData: (newData: Partial<DrawGroupData>) => void;
    activeDraw: BaseMode<import("@antv/l7-draw").IBaseModeOptions<import("@turf/helpers").Feature<import("@turf/helpers").Geometry | import("@turf/helpers").GeometryCollection, {
        [name: string]: any;
    }>>>;
    activeDrawInfo: {
        enable: any;
        disable: any;
        getDrawData: any;
        drawType: "circle" | "line" | "polygon" | "rect" | "point";
        draw: BaseMode<import("@antv/l7-draw").IBaseModeOptions<import("@turf/helpers").Feature<import("@turf/helpers").Geometry | import("@turf/helpers").GeometryCollection, {
            [name: string]: any;
        }>>>;
        drawData: import("../types").DrawData;
        setDrawData: (newData: import("../types").DrawData) => void;
        isEnable: boolean;
    };
    setActiveDraw: (target: BaseMode | DrawType | null) => void;
};
