var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Text/mini-charts/proportion/index.tsx
var proportion_exports = {};
__export(proportion_exports, {
  ProportionChart: () => ProportionChart
});
module.exports = __toCommonJS(proportion_exports);
var import_lodash = require("lodash");
var import_react = __toESM(require("react"));
var import_theme = require("../../theme");
var import_useSvgWrapper = require("../hooks/useSvgWrapper");
var import_getArcPath = require("./getArcPath");
function getProportionNumber(children, origin) {
  var _a;
  let result;
  const originNumber = (0, import_lodash.toNumber)(origin);
  if (!(0, import_lodash.isNaN)(originNumber)) {
    result = originNumber;
  } else {
    let text;
    if ((0, import_lodash.isString)(children)) {
      text = children;
    } else if (Array.isArray(children) && (0, import_lodash.isString)(children[0])) {
      text = children[0];
    }
    if ((_a = text == null ? void 0 : text.endsWith) == null ? void 0 : _a.call(text, "%")) {
      const percentageStr = text == null ? void 0 : text.replace(/%$/, "");
      const proportionNumber = (0, import_lodash.toNumber)(percentageStr);
      if (!(0, import_lodash.isNaN)(proportionNumber))
        result = proportionNumber / 100;
    }
  }
  return result;
}
var ProportionChart = ({ origin, children }) => {
  const data = (0, import_react.useMemo)(() => getProportionNumber(children, origin), [children, origin]);
  const [Svg, fontSize] = (0, import_useSvgWrapper.useSvgWrapper)();
  const r = fontSize / 2;
  return data && /* @__PURE__ */ import_react.default.createElement(Svg, { width: fontSize, height: fontSize }, /* @__PURE__ */ import_react.default.createElement("circle", { cx: r, cy: r, r, fill: import_theme.TEXT_THEME.chart.proportionShadowColor }), data >= 1 ? /* @__PURE__ */ import_react.default.createElement("circle", { cx: r, cy: r, r, fill: import_theme.TEXT_THEME.chart.proportionFillColor }) : /* @__PURE__ */ import_react.default.createElement("path", { d: (0, import_getArcPath.getArcPath)(fontSize, data), fill: import_theme.TEXT_THEME.chart.proportionFillColor }));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ProportionChart
});
