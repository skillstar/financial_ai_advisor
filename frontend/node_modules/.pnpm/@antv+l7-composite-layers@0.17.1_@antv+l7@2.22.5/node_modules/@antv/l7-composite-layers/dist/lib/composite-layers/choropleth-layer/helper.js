"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLabelLayerOptions = exports.parserLabeSourceData = exports.isLabelPosition = void 0;
const util_1 = require("@antv/util");
const label_layer_1 = require("../common/label-layer");
/**
 * 是否开启自定义标注图层坐标字段
 */
const isLabelPosition = (position) => {
    if ((0, util_1.isUndefined)(position) || (0, util_1.isBoolean)(position))
        return false;
    if ((0, util_1.isUndefined)(position['coordinates']) &&
        ((0, util_1.isUndefined)(position['x']) || (0, util_1.isUndefined)(position['y'])) &&
        (0, util_1.isUndefined)(position['geometry'])) {
        return false;
    }
    return true;
};
exports.isLabelPosition = isLabelPosition;
/**
 * 开启自定义标注图层坐标字段，解析标注图层 source
 */
const parserLabeSourceData = (source, labelOptions) => {
    const position = labelOptions === null || labelOptions === void 0 ? void 0 : labelOptions.position;
    if (!(0, exports.isLabelPosition)(position)) {
        return source;
    }
    // TODO: type 为 json 有效，为 geojson 会自动计算中心点，指定坐标字段无效
    const type = source.parser.type;
    const transforms = source.transforms;
    const originData = source['originData'];
    const sourceOptions = { data: originData, transforms };
    if (position['coordinates']) {
        const coordinates = position['coordinates'];
        sourceOptions['parser'] = { type, coordinates };
    }
    else if (position['x'] && position['y']) {
        const x = position['x'];
        const y = position['y'];
        sourceOptions['parser'] = { type, x, y };
    }
    else if (position['geometry']) {
        const geometry = position['geometry'];
        sourceOptions['parser'] = { type, geometry };
    }
    return sourceOptions;
};
exports.parserLabeSourceData = parserLabeSourceData;
/**
 * 获取标注图层配置项
 */
const getLabelLayerOptions = (options, source) => {
    return Object.assign(Object.assign({}, (0, label_layer_1.getLabelLayerOptions)(options)), { source: (0, exports.parserLabeSourceData)(source, options.label) });
};
exports.getLabelLayerOptions = getLabelLayerOptions;
//# sourceMappingURL=helper.js.map