var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Text/utils/useAntdDarkAlgorithm.ts
var useAntdDarkAlgorithm_exports = {};
__export(useAntdDarkAlgorithm_exports, {
  useAntdDarkAlgorithm: () => useAntdDarkAlgorithm
});
module.exports = __toCommonJS(useAntdDarkAlgorithm_exports);
var import_antd = require("antd");
var import_lodash = require("lodash");
var import_react = require("react");
var useAntdDarkAlgorithm = () => {
  var _a, _b;
  const darkAlgorithm = (_a = import_antd.theme) == null ? void 0 : _a.darkAlgorithm;
  const config = (0, import_react.useContext)(import_antd.ConfigProvider.ConfigContext);
  const currentAlgorithm = (_b = config.theme) == null ? void 0 : _b.algorithm;
  if ((0, import_lodash.isArray)(currentAlgorithm) && currentAlgorithm.includes(darkAlgorithm))
    return true;
  return !!darkAlgorithm && currentAlgorithm === darkAlgorithm;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useAntdDarkAlgorithm
});
