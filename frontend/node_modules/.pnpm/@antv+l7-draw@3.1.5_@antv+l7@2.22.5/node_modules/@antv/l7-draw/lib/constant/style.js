"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NORMAL_COLOR = exports.DEFAULT_TEXT_NORMAL_STYLE = exports.DEFAULT_STYLE = exports.DEFAULT_POINT_STYLE = exports.DEFAULT_POINT_NORMAL_STYLE = exports.DEFAULT_NODE_STYLE = exports.DEFAULT_NODE_NORMAL_STYLE = exports.DEFAULT_MID_POINT_STYLE = exports.DEFAULT_COMMON_OPTIONS = exports.ACTIVE_COLOR = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var NORMAL_COLOR = exports.NORMAL_COLOR = '#1990FF';
var ACTIVE_COLOR = exports.ACTIVE_COLOR = '#ED9D48';
var DEFAULT_COMMON_OPTIONS = exports.DEFAULT_COMMON_OPTIONS = {
  blend: 'normal',
  pickingBuffer: 5
};
var DEFAULT_POINT_NORMAL_STYLE = exports.DEFAULT_POINT_NORMAL_STYLE = {
  color: NORMAL_COLOR,
  shape: 'circle',
  size: 6
};
var DEFAULT_NODE_NORMAL_STYLE = exports.DEFAULT_NODE_NORMAL_STYLE = {
  color: ACTIVE_COLOR,
  shape: 'circle',
  size: 6
};
var DEFAULT_MID_POINT_STYLE = exports.DEFAULT_MID_POINT_STYLE = {
  shape: 'circle',
  size: 6,
  color: ACTIVE_COLOR
};
var DEFAULT_POINT_STYLE = exports.DEFAULT_POINT_STYLE = {
  options: DEFAULT_COMMON_OPTIONS,
  normal: DEFAULT_POINT_NORMAL_STYLE,
  hover: _objectSpread(_objectSpread({}, DEFAULT_POINT_NORMAL_STYLE), {}, {
    size: 8
  }),
  active: _objectSpread(_objectSpread({}, DEFAULT_POINT_NORMAL_STYLE), {}, {
    size: 8,
    color: ACTIVE_COLOR
  }),
  style: {
    stroke: '#ffffff',
    strokeWidth: 2
  }
};
var DEFAULT_NODE_STYLE = exports.DEFAULT_NODE_STYLE = {
  options: DEFAULT_COMMON_OPTIONS,
  normal: DEFAULT_NODE_NORMAL_STYLE,
  hover: _objectSpread(_objectSpread({}, DEFAULT_NODE_NORMAL_STYLE), {}, {
    size: 8
  }),
  active: _objectSpread(_objectSpread({}, DEFAULT_NODE_NORMAL_STYLE), {}, {
    size: 8
  }),
  style: {
    stroke: '#ffffff',
    strokeWidth: 2
  }
};
var DEFAULT_TEXT_NORMAL_STYLE = exports.DEFAULT_TEXT_NORMAL_STYLE = {
  color: NORMAL_COLOR,
  size: 12
};
var DEFAULT_STYLE = exports.DEFAULT_STYLE = {
  point: DEFAULT_NODE_STYLE,
  line: {
    options: DEFAULT_COMMON_OPTIONS,
    normal: {
      color: NORMAL_COLOR,
      size: 2
    },
    hover: {
      color: NORMAL_COLOR,
      size: 2
    },
    active: {
      color: ACTIVE_COLOR,
      size: 2
    },
    style: {}
  },
  polygon: {
    options: DEFAULT_COMMON_OPTIONS,
    normal: {
      color: NORMAL_COLOR
    },
    hover: {
      color: NORMAL_COLOR
    },
    active: {
      color: ACTIVE_COLOR
    },
    style: {
      opacity: 0.15
    }
  },
  midPoint: {
    options: DEFAULT_COMMON_OPTIONS,
    normal: DEFAULT_MID_POINT_STYLE
  },
  dashLine: {
    options: DEFAULT_COMMON_OPTIONS,
    normal: {
      color: ACTIVE_COLOR,
      size: 2
    },
    style: {
      lineType: 'dash',
      dashArray: [6, 6]
    }
  },
  text: {
    options: DEFAULT_COMMON_OPTIONS,
    normal: DEFAULT_TEXT_NORMAL_STYLE,
    active: _objectSpread(_objectSpread({}, DEFAULT_TEXT_NORMAL_STYLE), {}, {
      color: ACTIVE_COLOR
    }),
    style: {
      fontWeight: '800',
      textOffset: [0, DEFAULT_TEXT_NORMAL_STYLE.size + 6],
      textAllowOverlap: true,
      stroke: '#ffffff',
      strokeWidth: 2
    }
  }
};