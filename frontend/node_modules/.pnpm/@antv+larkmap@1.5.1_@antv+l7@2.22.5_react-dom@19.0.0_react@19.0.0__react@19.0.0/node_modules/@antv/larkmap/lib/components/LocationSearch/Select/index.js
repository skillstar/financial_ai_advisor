"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classnames = _interopRequireDefault(require("classnames"));
var _lodash = require("lodash");
var _rcSelect = _interopRequireWildcard(require("rc-select"));
var React = _interopRequireWildcard(require("react"));
require("./index.css");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';
const PREFIX_CLS = 'larkmap-select';
const InternalSelect = ({
  prefixCls: customizePrefixCls,
  bordered = true,
  className,
  getPopupContainer,
  dropdownClassName,
  popupClassName,
  listHeight = 256,
  placement,
  listItemHeight = 24,
  disabled,
  notFoundContent,
  ...props
}, ref) => {
  const mode = React.useMemo(() => {
    const {
      mode: m
    } = props;
    if (m === 'combobox') {
      return undefined;
    }
    if (m === SECRET_COMBOBOX_MODE_DO_NOT_USE) {
      return 'combobox';
    }
    return m;
  }, [props]);
  const selectProps = (0, _lodash.omit)(props, 'suffixIcon', 'itemIcon');
  const mergedClassName = (0, _classnames.default)({
    [`${PREFIX_CLS}-borderless`]: !bordered
  }, className);
  return /*#__PURE__*/React.createElement(_rcSelect.default, _extends({
    ref: ref
  }, selectProps, {
    listHeight: listHeight,
    listItemHeight: listItemHeight,
    mode: mode,
    prefixCls: PREFIX_CLS,
    placement: placement,
    notFoundContent: notFoundContent ?? '当前无数据',
    className: mergedClassName,
    getPopupContainer: getPopupContainer,
    dropdownClassName: popupClassName,
    disabled: disabled
  }));
};
const Select = /*#__PURE__*/React.forwardRef(InternalSelect);
Select.SECRET_COMBOBOX_MODE_DO_NOT_USE = SECRET_COMBOBOX_MODE_DO_NOT_USE;
Select.Option = _rcSelect.Option;
Select.OptGroup = _rcSelect.OptGroup;
var _default = exports.default = Select;