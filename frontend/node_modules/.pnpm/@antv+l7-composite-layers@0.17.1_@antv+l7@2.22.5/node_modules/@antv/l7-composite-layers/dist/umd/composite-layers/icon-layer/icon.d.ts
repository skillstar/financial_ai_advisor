import { TextLayer } from '../../core-layers/text-layer';
import { CompositeLayer } from '../../core/composite-layer';
import { ICoreLayer, ISource, Scene } from '../../types';
import { IconLayerActiveOptions, IconLayerOptions, IconLayerSourceOptions } from './types';
export declare abstract class IconLayer<T extends IconLayerOptions> extends CompositeLayer<T> {
    /**
     * 默认配置项
     */
    static DefaultOptions: Partial<IconLayerOptions>;
    /**
     * 图层交互状态配置
     */
    protected layerState: {
        active?: boolean | {
            color: string;
            enable?: boolean;
        };
        select?: boolean | IconLayerActiveOptions;
    } | undefined;
    /**
     * 复合图层类型
     */
    type: import("../../types").CompositeLayerType;
    /**
     * 主图层
     */
    protected get layer(): ICoreLayer;
    /**
     * 图标图层
     */
    protected get iconLayer(): ICoreLayer;
    /**
     * 标注文本图层
     */
    get iconLabelLayer(): TextLayer;
    /**
     * 选中数据
     */
    private selectData;
    /**
     * 选中填充面图层
     */
    get selectIconLayer(): ICoreLayer;
    constructor(options: T);
    /**
     * 获取默认配置
     */
    getDefaultOptions(): Partial<IconLayerOptions>;
    /**
     * 初始化资源
     */
    protected abstract initAssets(): void;
    /**
     * 添加到场景
     */
    addTo(scene: Scene): void;
    /**
     * 获取图标图层配置项
     */
    private getIconLayerOptions;
    private getHighLightLayerOptions;
    /**
     * 图层选中回调
     */
    private onSelectHandle;
    private handleSelectData;
    protected createSubLayers(): ICoreLayer[];
    protected updateSubLayers(options: Partial<T>): void;
    /**
     * 设置选中描边与填充子图层数据
     */
    protected setSelectLayerSource(selectData?: any[]): void;
    /**
     * 设置子图层数据
     */
    protected setSubLayersSource(source: IconLayerSourceOptions | ISource): void;
    protected initSubLayersEvent(): void;
    /**
     * 更新: 更新配置
     */
    updateOption(options: Partial<T>): void;
    setIndex(zIndex: number): void;
    /**
     * 设置图层高亮状态
     */
    setActive(field: string, value: number | string): void;
    /**
     * 更新
     */
    update(options: Partial<T>): void;
    /**
     * 设置图层选中状态
     */
    setSelect(field: string, value: number | string): void;
    /**
     * 图层框选数据
     */
    boxSelect(bounds: [number, number, number, number], callback: (...args: any[]) => void): void;
}
