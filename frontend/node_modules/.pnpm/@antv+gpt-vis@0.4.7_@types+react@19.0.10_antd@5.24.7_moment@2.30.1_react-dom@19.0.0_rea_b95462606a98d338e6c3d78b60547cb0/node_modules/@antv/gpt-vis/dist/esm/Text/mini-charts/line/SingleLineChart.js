import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { isArray, isString, size } from 'lodash';
import React, { useMemo } from 'react';
import { TEXT_THEME } from "../../theme";
import { useSvgWrapper } from "../hooks";
import { useLineCompute } from "./useLineCompute";
var LINEAR_FILL_COLOR_ID = 'wsc-line-fill';
function getLineChartData(origin) {
  if (isArray(origin)) return origin;
  if (isString(origin)) {
    try {
      var data = JSON.parse(origin);
      if (isArray(data)) return data;
    } catch (e) {
      console.warn(e, "".concat(origin, " is not a valid json string"));
    }
  }
}
export var SingleLineChart = function SingleLineChart(_ref) {
  var origin = _ref.origin;
  var _useSvgWrapper = useSvgWrapper(),
    _useSvgWrapper2 = _slicedToArray(_useSvgWrapper, 2),
    Svg = _useSvgWrapper2[0],
    fontSize = _useSvgWrapper2[1];
  var data = useMemo(function () {
    return getLineChartData(origin);
  }, [origin]);
  var _useLineCompute = useLineCompute(fontSize, data),
    width = _useLineCompute.width,
    height = _useLineCompute.height,
    linePath = _useLineCompute.linePath,
    polygonPath = _useLineCompute.polygonPath;
  return size(data) > 0 && /*#__PURE__*/React.createElement(Svg, {
    width: width,
    height: height
  }, /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("linearGradient", {
    x1: "50%",
    y1: "0%",
    x2: "50%",
    y2: "122.389541%",
    id: LINEAR_FILL_COLOR_ID
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: TEXT_THEME.chart.lineStrokeColor,
    offset: "0%"
  }), /*#__PURE__*/React.createElement("stop", {
    stopColor: "#FFFFFF",
    stopOpacity: "0",
    offset: "100%"
  }))), linePath && /*#__PURE__*/React.createElement("path", {
    d: linePath,
    stroke: TEXT_THEME.chart.lineStrokeColor,
    fill: "transparent"
  }), polygonPath && /*#__PURE__*/React.createElement("polygon", {
    points: polygonPath,
    fill: "url(#".concat(LINEAR_FILL_COLOR_ID, ")")
  }));
};