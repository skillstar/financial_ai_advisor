import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
var _excluded = ["children"];
import React, { useLayoutEffect, useRef, useState } from 'react';
import { TEXT_THEME } from "../../theme";
import { getElementFontSize } from "./getElementFontSize";
export var useSvgWrapper = function useSvgWrapper() {
  var ele = useRef(null);
  var _useState = useState(TEXT_THEME.fontSizeBase),
    _useState2 = _slicedToArray(_useState, 2),
    fontSize = _useState2[0],
    setFontSize = _useState2[1];
  useLayoutEffect(function () {
    if (ele.current) {
      setFontSize(getElementFontSize(ele.current, TEXT_THEME.fontSizeBase));
    }
  }, []);
  var Svg = function Svg(_ref) {
    var children = _ref.children,
      otherProps = _objectWithoutProperties(_ref, _excluded);
    return /*#__PURE__*/React.createElement("svg", _extends({
      style: {
        margin: '0px 4px',
        transform: 'translate(0px, 0.125em)'
      },
      ref: ele
    }, otherProps), children);
  };
  return [Svg, fontSize];
};