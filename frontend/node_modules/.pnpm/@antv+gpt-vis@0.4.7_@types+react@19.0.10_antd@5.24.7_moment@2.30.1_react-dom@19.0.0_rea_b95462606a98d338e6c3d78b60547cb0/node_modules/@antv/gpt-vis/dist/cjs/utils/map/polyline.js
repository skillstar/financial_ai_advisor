var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/map/polyline.ts
var polyline_exports = {};
__export(polyline_exports, {
  setPolyline: () => setPolyline
});
module.exports = __toCommonJS(polyline_exports);
var import_l7 = require("@antv/l7");
function setPolyline(data) {
  const lineData = data.map((item) => {
    const coord = item.points.map((point) => [point.longitude, point.latitude]);
    return {
      ...item,
      coordinates: coord,
      color: item.color,
      width: item.width
    };
  });
  const isdash = lineData[0].dottedLine;
  const lineLayer = new import_l7.LineLayer().source(lineData, {
    parser: {
      type: "json",
      coordinates: "coordinates"
    }
  }).size("width").shape("line").color("color").style({
    opacity: 1,
    lineType: isdash ? "dash" : "solid",
    dashArray: [3, 1]
  });
  return [lineLayer];
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setPolyline
});
