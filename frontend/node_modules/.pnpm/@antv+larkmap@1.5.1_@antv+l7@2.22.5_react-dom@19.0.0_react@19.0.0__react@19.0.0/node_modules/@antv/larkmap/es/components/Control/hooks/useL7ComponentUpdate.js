import { useTrackedEffect } from 'ahooks';
import { useMemo, useRef } from 'react';

/**
 * 监听 control 的 options 中各项是否发生变化，若有变化则调用 control.setOptions 传入更新的配置
 * @param control
 * @param options
 */
export var useL7ComponentUpdate = function useL7ComponentUpdate(control, options) {
  var isFirst = useRef(true);
  var keyList = useMemo(function () {
    return Object.keys(options);
  }, [options]);
  useTrackedEffect(function (updateIndexes) {
    if (isFirst.current) {
      isFirst.current = false;
      return;
    }
    var updateOptions = {};
    updateIndexes.forEach(function (updateIndex) {
      var key = keyList[updateIndex];
      updateOptions[key] = options[key];
    });
    control === null || control === void 0 || control.setOptions(updateOptions);
  }, Object.values(options));
};