import { TEXT_THEME } from "../../theme";
function getStyle(ele, style) {
  var _ele$currentStyle;
  return window.getComputedStyle ?
  // @ts-ignore style as any
  window.getComputedStyle(ele, null)[style] : // @ts-ignore currentStyle for IE
  ele === null || ele === void 0 || (_ele$currentStyle = ele.currentStyle) === null || _ele$currentStyle === void 0 ? void 0 : _ele$currentStyle[style];
}
function isAbsoluteUnitPx(str) {
  return str === null || str === void 0 ? void 0 : str.endsWith('px');
}
function getPxNumber(str) {
  var removeUnit = str.replace(/px$/, '');
  var resultNumber = Number(removeUnit);
  if (!Number.isNaN(resultNumber)) return resultNumber;
  return undefined;
}
export function getElementFontSize(ele) {
  var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TEXT_THEME.fontSizeBase;
  var FONT_SIZE = 'font-size';
  var eleFontSizeStr = getStyle(ele, FONT_SIZE);
  if (eleFontSizeStr && isAbsoluteUnitPx(eleFontSizeStr)) {
    var px = getPxNumber(eleFontSizeStr);
    if (px) return px;
  }
  var bodyFontSizeStr = getStyle(window.document.body, FONT_SIZE);
  if (bodyFontSizeStr && isAbsoluteUnitPx(bodyFontSizeStr)) {
    var _px = getPxNumber(bodyFontSizeStr);
    if (_px) return _px;
  }
  return defaultSize;
}