import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["type", "axisYTitle"];
import { ChartType } from "../types";
export function transform(series, categories) {
  var newChildren = series.map(function (item, index) {
    var type = item.type,
      axisYTitle = item.axisYTitle,
      others = _objectWithoutProperties(item, _excluded);
    var defaultYField = axisYTitle || "value_".concat(index + 1);
    var baseConfig = _objectSpread(_objectSpread({}, others), {}, {
      yField: defaultYField,
      axis: {
        y: {
          title: axisYTitle
        }
      },
      // data放在最外层
      data: undefined
    });
    if (type === ChartType.Column) {
      return _objectSpread(_objectSpread({}, baseConfig), {}, {
        type: 'interval'
      });
    }
    if (type === ChartType.Line) {
      return _objectSpread(_objectSpread({}, baseConfig), {}, {
        type: type,
        shapeField: 'smooth',
        axis: {
          y: {
            position: 'right',
            title: axisYTitle
          }
        },
        style: {
          lineWidth: 2
        }
      });
    }
    return baseConfig;
  });
  var newData = categories.map(function (item, index) {
    var temp = {
      category: item
    };
    series.forEach(function (s, i) {
      var defaultYField = s.axisYTitle || "value_".concat(i + 1);
      temp[defaultYField] = s.data[index];
    });
    return temp;
  });
  var legendTypeList = series.map(function (item) {
    return item.type === ChartType.Line ? 'smooth' : 'rect';
  });
  return {
    children: newChildren,
    data: newData,
    legendTypeList: legendTypeList
  };
}