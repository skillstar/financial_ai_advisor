import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { PointLayer } from '@antv/l7';
import { isObject } from 'lodash';
import { urlToMarkerId } from "./util";
export function setMarkers(data) {
  var items = data.map(function (item) {
    var _item$label, _item$label2, _item$label3;
    return _objectSpread(_objectSpread({}, item), {}, {
      label: isObject(item.label) ? item.label.content : item.label,
      color: (_item$label = item.label) === null || _item$label === void 0 ? void 0 : _item$label.color,
      bgColor: (_item$label2 = item.label) === null || _item$label2 === void 0 ? void 0 : _item$label2.bgColor,
      fontSize: (_item$label3 = item.label) === null || _item$label3 === void 0 ? void 0 : _item$label3.fontSize,
      offsets: [item.anchorX || 0, item.anchorY || -1],
      iconPath: item.iconPath ? urlToMarkerId(item.iconPath) : undefined
    });
  });
  var icons = items.filter(function (item) {
    return item.iconPath !== undefined;
  });
  var texts = items.filter(function (item) {
    return item.label !== undefined;
  });
  var layers = [];
  if (texts.length > 0) {
    var offsets = texts[0].offsets;
    var fontSize = texts[0].fontSize || 10;
    var text = new PointLayer({
      zIndex: 2
    }).source(texts, {
      parser: {
        type: 'json',
        x: 'longitude',
        y: 'latitude'
      }
    }).shape('label', 'text').size('fontSize').color('color').style({
      opacity: 1,
      textOffset: [offsets[0], -2 * offsets[1] * fontSize],
      fontWeight: 600,
      textAnchor: 'center',
      stroke: texts[0].bgColor || '#ffffff',
      // 描边颜色
      strokeWidth: 2,
      // 描边宽度
      strokeOpacity: 1.0,
      padding: [10, 10]
    });
    layers.push(text);
  }
  if (icons.length !== 0) {
    var _offsets = icons[0].offsets;
    var width = icons[0].width || 10;
    var iconLayer = new PointLayer().source(icons, {
      parser: {
        type: 'json',
        x: 'longitude',
        y: 'latitude'
      }
    }).shape('iconPath').size('width').style({
      offsets: [_offsets[0], _offsets[1] * width]
    });
    layers.push(iconLayer);
  }
  return layers;
}