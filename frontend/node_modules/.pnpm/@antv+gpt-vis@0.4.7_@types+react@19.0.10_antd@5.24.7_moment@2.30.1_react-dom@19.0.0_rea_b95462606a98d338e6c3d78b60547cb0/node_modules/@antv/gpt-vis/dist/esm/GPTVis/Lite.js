import _extends from "@babel/runtime/helpers/esm/extends";
import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "components", "rehypePlugins", "remarkPlugins", "eventSubs"];
import EventEmitter from '@antv/event-emitter';
import React, { memo, useEffect, useMemo } from 'react';
import Markdown from 'react-markdown';
import rehypeRaw from 'rehype-raw';
import remarkGfm from 'remark-gfm';
import { GPTVisContext } from "./hooks/useContext";
import { useEventPublish } from "./hooks/useEvent";
var GPTVisLite = function GPTVisLite(_ref) {
  var children = _ref.children,
    components = _ref.components,
    rehypePlugins = _ref.rehypePlugins,
    remarkPlugins = _ref.remarkPlugins,
    eventSubs = _ref.eventSubs,
    rest = _objectWithoutProperties(_ref, _excluded);
  var eventBus = useMemo(function () {
    return new EventEmitter();
  }, []);
  var contextValue = useMemo(function () {
    return {
      eventBus: eventBus
    };
  }, [eventBus]);
  useEffect(function () {
    if (eventSubs) {
      var events = Object.keys(eventSubs);
      for (var _i = 0, _events = events; _i < _events.length; _i++) {
        var eventName = _events[_i];
        eventBus.on(eventName, eventSubs[eventName]);
      }
      return function () {
        for (var _i2 = 0, _events2 = events; _i2 < _events2.length; _i2++) {
          var _eventName = _events2[_i2];
          eventBus.off(_eventName, eventSubs[_eventName]);
        }
      };
    }
  }, [eventBus, eventSubs]);
  return /*#__PURE__*/React.createElement(GPTVisContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/React.createElement(Markdown, _extends({
    components: components,
    rehypePlugins: [rehypeRaw].concat(_toConsumableArray(rehypePlugins ? rehypePlugins : [])),
    remarkPlugins: [remarkGfm].concat(_toConsumableArray(remarkPlugins ? remarkPlugins : []))
  }, rest), children));
};
export { useEventPublish };
export default /*#__PURE__*/memo(GPTVisLite);