function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { Marker as L7Marker } from '@antv/l7';
import { useDeepCompareEffect } from 'ahooks';
import React, { memo, useEffect, useMemo, useRef } from 'react';
import { createPortal } from 'react-dom';
import { useScene } from "../LarkMap/hooks";
export var Marker = /*#__PURE__*/memo(function Marker(props) {
  var scene = useScene();
  var thisRef = useRef({
    props: props
  });
  thisRef.current.props = props;
  var marker = useMemo(function () {
    var hasChildren = false;
    React.Children.forEach(props.children, function (el) {
      if (el) {
        hasChildren = true;
      }
    });
    var options = _objectSpread(_objectSpread({}, props), {}, {
      element: hasChildren ? document.createElement('div') : null
    });
    // @ts-ignore
    var l7marker = new L7Marker(options);
    l7marker.on('click', function (e) {
      var _thisRef$current$prop, _thisRef$current$prop2;
      (_thisRef$current$prop = (_thisRef$current$prop2 = thisRef.current.props).onClick) === null || _thisRef$current$prop === void 0 || _thisRef$current$prop.call(_thisRef$current$prop2, e);
    });
    return l7marker;
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  useDeepCompareEffect(function () {
    marker.setLnglat(props.lngLat);
  }, [props.lngLat]);
  useEffect(function () {
    scene.addMarker(marker);
    return function () {
      marker.remove();
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // @ts-ignore
  return /*#__PURE__*/createPortal(props.children, marker.getElement());
});