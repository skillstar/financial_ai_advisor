import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
var _excluded = ["label", "id"];
import { isObject } from 'lodash';
var DefaultMapConfig = {
  mapOptions: {
    center: [120.210792, 30.246026],
    zoom: 16,
    maxZoom: 18,
    pitch: 0,
    rotation: 0,
    zoomEnable: true,
    pitchEnable: true
  }
};
var formatMapStyle = function formatMapStyle(props) {
  var config = {
    mapOptions: _objectSpread(_objectSpread({}, DefaultMapConfig.mapOptions), {}, {
      center: props.longitude && props.latitude ? [props.longitude, props.latitude] : DefaultMapConfig.mapOptions.center,
      zoom: props.scale || DefaultMapConfig.mapOptions.zoom,
      pitch: props.skew || DefaultMapConfig.mapOptions.pitch,
      rotation: props.rotate || DefaultMapConfig.mapOptions.rotation,
      zoomEnable: props.enableZoom || DefaultMapConfig.mapOptions.zoomEnable,
      pitchEnable: props.enableRotate || DefaultMapConfig.mapOptions.pitchEnable,
      // 地图底图样式
      style: props === null || props === void 0 ? void 0 : props.mapType,
      // 高德地图密钥
      token: props === null || props === void 0 ? void 0 : props.token
    }),
    logoVisible: false
  };
  return config;
};
var DefaultMarkerStyle = {
  width: 12,
  anchorX: 0,
  anchorY: 1,
  label: {
    content: '',
    color: '#000000',
    fontSize: 10,
    borderRadius: 5,
    bgColor: '#ffffff',
    padding: 5
  },
  iconPath: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3XdDTbsQ84QAAAAAAAAAAAAADmJ7AQ/original'
};
var formatMakerStyle = function formatMakerStyle(data, markerStyle) {
  var labelStyle = Object.assign({}, DefaultMarkerStyle.label, markerStyle === null || markerStyle === void 0 ? void 0 : markerStyle.label);
  // label 优先级 data > markerStyle > DefaultMarkerStyle
  return data.map(function (marker, index) {
    var label = marker.label,
      id = marker.id,
      rest = _objectWithoutProperties(marker, _excluded);
    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, DefaultMarkerStyle), markerStyle), rest), {}, {
      label: _objectSpread(_objectSpread({}, labelStyle), isObject(label) ? label : {
        content: label
      }),
      id: id || index.toString()
    });
  });
};
var DefaultPolylineStyle = {
  width: 2,
  color: '#16f',
  dottedLine: false,
  zIndex: 1
};
var formatPolylineStyle = function formatPolylineStyle(data, polylineStyle) {
  return data.map(function (item) {
    return _objectSpread(_objectSpread(_objectSpread({}, DefaultPolylineStyle), polylineStyle), item);
  });
};
export { DefaultMarkerStyle, DefaultPolylineStyle, formatMakerStyle, formatMapStyle, formatPolylineStyle };