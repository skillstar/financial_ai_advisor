var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/graph.ts
var graph_exports = {};
__export(graph_exports, {
  visGraphData2GraphData: () => visGraphData2GraphData,
  visTreeData2GraphData: () => visTreeData2GraphData
});
module.exports = __toCommonJS(graph_exports);
var import_graphs = require("@ant-design/graphs");
var { treeToGraphData } = import_graphs.G6;
function visTreeData2GraphData(data) {
  return treeToGraphData(data, {
    getNodeData: (datum, depth) => {
      datum.id = datum.name;
      datum.depth = depth;
      if (!datum.children)
        return datum;
      const { children, ...restDatum } = datum;
      return {
        ...restDatum,
        children: children.map((child) => child.name)
      };
    },
    getEdgeData: (source, target) => ({
      source: source.name,
      target: target.name
    })
  });
}
function visGraphData2GraphData(data) {
  return {
    nodes: data.nodes.map((node) => ({
      id: node.name,
      style: { labelText: node.name }
    })),
    edges: data.edges.map((edge) => ({
      source: edge.source,
      target: edge.target,
      style: { labelText: edge.name }
    }))
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  visGraphData2GraphData,
  visTreeData2GraphData
});
