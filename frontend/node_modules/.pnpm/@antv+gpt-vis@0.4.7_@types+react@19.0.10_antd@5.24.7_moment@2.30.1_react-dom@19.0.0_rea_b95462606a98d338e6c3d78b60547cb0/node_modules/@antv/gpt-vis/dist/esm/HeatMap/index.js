import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "data"];
import { HeatmapLayer } from '@antv/larkmap';
import React, { useMemo } from 'react';
import { useMapConfig } from "../ConfigProvider/hooks";
import Map from "../Map";
var heapLayerOptions = {
  autoFit: true,
  shape: 'heatmap',
  size: {
    field: 'value',
    value: [0, 1]
  },
  style: {
    intensity: 3,
    radius: 20,
    opacity: 1,
    rampColors: {
      colors: ['#FF4818', '#F7B74A', '#FFF598', '#F27DEB', '#8C1EB2', '#421EB2'],
      positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0]
    }
  }
};
var HeatMap = function HeatMap(props) {
  var _useMapConfig = useMapConfig('HeatMap', props),
    children = _useMapConfig.children,
    data = _useMapConfig.data,
    mapConfigRest = _objectWithoutProperties(_useMapConfig, _excluded);
  var source = useMemo(function () {
    return {
      data: data || [],
      parser: {
        type: 'json',
        x: 'longitude',
        y: 'latitude'
      }
    };
  }, [data]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Map, mapConfigRest, /*#__PURE__*/React.createElement(HeatmapLayer, _extends({}, heapLayerOptions, {
    source: source
  })), children));
};
export default HeatMap;